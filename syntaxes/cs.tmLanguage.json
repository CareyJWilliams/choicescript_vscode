{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "ChoiceScript",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#choices"
		},
		{
			"include": "#todos"
		},
		{
			"include": "#variable-display"
		},
		{
			"include": "#variable-substitution"
		},
		{
			"include": "#multireplace"
		},
		{
			"include": "#operators"
		}
	],
	"repository": {
		"keywords": {
			"name": "keyword.control.cs",
			"match": "(?<!\\*)\\*((fake_)?choice|create|temp|delete|set|(else?|selectable_)?if|else|(disable|hide|allow)_reuse|label|goto((_random)?_scene)?|gosub(_scene)?|redirect_scene|return|finish|ending|(page|line)_break|params|title|author|input_(text|number)|rand|image|link|bug|stat_chart|scene_list|achieve(ment)?|check_achievements|script|print|more_games|share_this_game|show_password)\\b"
		},
		"comments": {
			"name": "comment.line.cs",
			"begin": "^\\s*\\*comment",
			"end": "(?=$)",
			"patterns": [{
				"include": "#todos"
			}]
		},
		"todos": {
			"patterns": [{
				"name": "invalid.illegal.cs",
				"match": "todo|TODO"
			}]
		},
		"choices": {
			"name": "entity.name.function",
			"begin": "(^|\\s+)#",
			"end": "(?=$)",
			"patterns": [
				{
					"include": "#multireplace"
				},
				{
					"include": "#variable-display"
				},
				{
					"include": "#todos"
				}
			]
		},
		"variable-display": {
			"name": "constant.language.cs",
			"begin": "\\$!?!?\\{",
			"end": "\\}",
			"patterns": [{
				"include": "#variable-substitution"
			}]
		},
		"variable-substitution": {
			"name": "variable.other",
			"begin": "(?<![$@]|[$@]!|[$@]!!){",
			"end": "\\}"
		},
		"multireplace": {
			"begin": "(@!?!?\\{)",
			"end": "(\\})",
			"beginCaptures": {
				"1": {
					"name": "string.interpolated"
				}
			},
			"endCaptures": {
				"1": {
					"name": "string.interpolated"
				}
			},
			"patterns": [
				{
					"name": "variable.other",
					"comment": "Bare variable at start of multireplace",
					"match": "\\G\\s*([a-z]\\w*)"
				},
				{
					"name": "variable.other",
					"comment": "Expression in parentheses at start of multireplace",
					"begin": "\\G\\s*\\(",
					"end": "\\)\\s+",
					"patterns": [{
						"include": "#variable-substitution"
					}]
				},
				{
					"include": "#variable-display"
				},
				{
					"name": "string.interpolated",
					"match": "\\|"
				},
				{
					"include": "#todos"
				}
			]
		},
		"operators": {
			"match": "(!?=|>=?|<=?|%)|(\\*|\\+|-|/|%+|%-)|(&)",
			"captures": {
				"1": {
					"name": "keyword.operator.comparison.cs"
				},
				"2": {
					"name": "keyword.operator.arithmetic.cs"
				},
				"3": {
					"name": "keyword.operator.string.cs"
				}
			}
		},
		"literals": {
			"name": "constant.language.cs",
			"match": "true|false"
		},
		"variable-name": {
			"match": "[a-z]\\w*"
		}
	},
	"scopeName": "source.cs"
}